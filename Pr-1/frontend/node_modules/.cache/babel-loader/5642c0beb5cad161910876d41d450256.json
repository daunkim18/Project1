{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uyenv\\\\Project1-Daun\\\\frontend\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../styles/Login.css';\nimport { BrowserRouter, Link, Route, Routes } from 'react-router-dom';\nimport Signup from './SignUp';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState();\n  const [isAdminUser, setIsAdminUser] = useState();\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    var {\n      uname,\n      pass\n    } = document.forms[0];\n    let userData = null;\n    let roleData = null;\n    const baseURL = `http://localhost:3001/username/${uname.value}`;\n    axios.get(baseURL).then(response => {\n      userData = response.data[0];\n\n      if (userData) {\n        if (userData.password !== pass.value) {\n          setErrorMessages({\n            name: \"pass\",\n            message: errors.pass\n          });\n        } else {\n          axios.get(`http://localhost:3001/role/${userData.role}`).then(res => {\n            roleData = res.data[0];\n\n            if (roleData) {\n              if (roleData.roletype == 'admin') {\n                setIsAdminUser(true);\n              }\n            }\n          });\n          setIsSubmitted(true);\n        }\n      } else {\n        setErrorMessages({\n          name: \"uname\",\n          message: errors.uname\n        });\n      }\n    });\n  };\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login or Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"loginForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"username\",\n        placeholder: \"name@email.com\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }, this), renderErrorMessage(\"uname\"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }, this), renderErrorMessage(\"pass\"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 24\n      }, this), \"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Sign up today!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginBtn\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: isSubmitted ? isAdminUser ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Admin user is successfully logged in \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 40\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User is successfully logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 89\n      }, this) : renderForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Login, \"KYXFaWfK7dA+9eeZkqPnaBTbiPY=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/uyenv/Project1-Daun/frontend/src/components/Login.js"],"names":["React","useState","BrowserRouter","Link","Route","Routes","Signup","axios","Login","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","isAdminUser","setIsAdminUser","errors","uname","pass","handleSubmit","event","preventDefault","document","forms","userData","roleData","baseURL","value","get","then","response","data","password","name","message","role","res","roletype","renderErrorMessage","renderForm"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport '../styles/Login.css';\r\nimport { BrowserRouter, Link, Route, Routes } from 'react-router-dom';\r\nimport Signup from './SignUp';\r\n\r\nimport axios from 'axios';\r\n\r\nfunction Login() {\r\n\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState();\r\n    const [isAdminUser, setIsAdminUser] = useState();\r\n  \r\n    const errors = {\r\n      uname: \"invalid username\",\r\n      pass: \"invalid password\"\r\n    };\r\n  \r\n    const handleSubmit = (event) => {\r\n      \r\n      event.preventDefault();\r\n  \r\n      var { uname, pass } = document.forms[0];\r\n      let userData = null;\r\n      let roleData = null;\r\n    \r\n    const baseURL =`http://localhost:3001/username/${uname.value}`;\r\n  \r\n    axios.get(baseURL).then((response) => {\r\n          userData=response.data[0];\r\n      if (userData) {\r\n        if (userData.password !== pass.value) {\r\n          setErrorMessages({ name: \"pass\", message: errors.pass });\r\n        } else {\r\n            axios.get(`http://localhost:3001/role/${userData.role}`).then((res)=>{\r\n                  roleData= res.data[0];\r\n                  if(roleData){\r\n                      if(roleData.roletype == 'admin'){\r\n                          setIsAdminUser(true);\r\n                      }\r\n                  }\r\n                  \r\n            })\r\n           \r\n            setIsSubmitted(true);\r\n        }\r\n      } else {\r\n        setErrorMessages({ name: \"uname\", message: errors.uname });\r\n      }\r\n      });\r\n    };\r\n  \r\n    const renderErrorMessage = (name) =>\r\n      name === errorMessages.name && (\r\n        <div className=\"error\">{errorMessages.message}</div>\r\n    );\r\n  \r\n    const renderForm = (\r\n      <div>\r\n              <h1>Login or Sign Up</h1>\r\n  \r\n              <form id='loginForm' onSubmit={handleSubmit}>\r\n                  <label for='username'>Username</label>\r\n                  <br/>\r\n                  <input type='email' id='username' placeholder='name@email.com' required/>\r\n                  {renderErrorMessage(\"uname\")}\r\n                  <br/>\r\n                  <label for='password'>Password</label>\r\n                  <br/>\r\n                  <input type='password' id='password' placeholder='Password' required/>\r\n                  {renderErrorMessage(\"pass\")}\r\n                  <br/><br/>\r\n                      Don't have an account? <Link to='/signup'>Sign up today!</Link>\r\n                  <br/><br/>\r\n                  <button className='loginBtn'>Login</button>\r\n              </form>\r\n          </div>\r\n    );\r\n  \r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"login-form\">\r\n          {isSubmitted ? \r\n                        (isAdminUser ? <h1>Admin user is successfully logged in </h1> : <h1>User is successfully logged in</h1>)  \r\n          : renderForm}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Login;"]},"metadata":{},"sourceType":"module"}